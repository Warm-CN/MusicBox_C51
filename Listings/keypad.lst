C51 COMPILER V9.59.0.0   KEYPAD                                                            05/15/2025 08:47:22 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEYPAD
OBJECT MODULE PLACED IN .\Objects\keypad.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE keypad.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\keypa
                    -d.lst) TABS(2) OBJECT(.\Objects\keypad.obj)

line level    source

   1          #include "keypad.h"
   2          
   3          // Helper delay function for debouncing
   4          // static void delay_ms_keypad(unsigned int ms) {
   5          //     unsigned int i, j;
   6          //     for (i = 0; i < ms; i++) {
   7          //         for (j = 0; j < 120; j++); // Adjust based on crystal frequency, approximately 1ms
   8          //     }
   9          // }
  10          // This delay is not used by Keypad_GetImmediateKeyState, it was from a previous blocking version.
  11          // Debouncing is now handled in main.c using delay_ms_main.
  12          
  13          void Keypad_Init(void) {
  14   1          // For 8051, to use P1 pins as inputs, their corresponding latch bits should be '1'.
  15   1          // This enables internal pull-ups (if the specific 8051 derivative has them and they are enabled by de
             -fault)
  16   1          // and configures them as high-impedance inputs.
  17   1      
  18   1          // Set column pins (P1.0 - P1.3) as inputs by writing '1' to their latches.
  19   1          // These correspond to KEYPAD_COL3, KEYPAD_COL2, KEYPAD_COL1, KEYPAD_COL0 respectively.
  20   1          KEYPAD_COL0 = 1; // P1.3
  21   1          KEYPAD_COL1 = 1; // P1.2
  22   1          KEYPAD_COL2 = 1; // P1.1
  23   1          KEYPAD_COL3 = 1; // P1.0
  24   1      
  25   1          // Set row pins (P1.4 - P1.7) initially high (not driving any row low).
  26   1          // They will be driven low one by one during scanning.
  27   1          // These correspond to KEYPAD_ROW0, KEYPAD_ROW1, KEYPAD_ROW2, KEYPAD_ROW3.
  28   1          KEYPAD_ROW0 = 1; // P1.4
  29   1          KEYPAD_ROW1 = 1; // P1.5
  30   1          KEYPAD_ROW2 = 1; // P1.6
  31   1          KEYPAD_ROW3 = 1; // P1.7
  32   1      
  33   1          // Alternatively, if all pins P1.0-P1.7 are used only by the keypad as defined:
  34   1          // P1 = 0xFF; // Sets all P1 pins to '1', configuring them as inputs with pull-ups.
  35   1          // Then, row pins are driven low as needed during scan.
  36   1      }
  37          
  38          unsigned char Keypad_GetImmediateKeyState(void) {
  39   1          unsigned char key_code = KEY_NONE;
  40   1      
  41   1          // Scan Row 0 (S1-S4), connected to KEYPAD_ROW0 (P1.4)
  42   1          KEYPAD_ROW0 = 0; KEYPAD_ROW1 = 1; KEYPAD_ROW2 = 1; KEYPAD_ROW3 = 1;
  43   1          if (KEYPAD_COL0 == 0) { key_code = KEY_S1;  }       // P1.3
  44   1          else if (KEYPAD_COL1 == 0) { key_code = KEY_S2;  }  // P1.2
  45   1          else if (KEYPAD_COL2 == 0) { key_code = KEY_S3;  }  // P1.1
  46   1          else if (KEYPAD_COL3 == 0) { key_code = KEY_S4;  }  // P1.0
  47   1          KEYPAD_ROW0 = 1; // Deactivate row 0
  48   1          if (key_code != KEY_NONE) return key_code;
  49   1      
  50   1          // Scan Row 1 (S5-S8), connected to KEYPAD_ROW1 (P1.5)
  51   1          KEYPAD_ROW0 = 1; KEYPAD_ROW1 = 0; KEYPAD_ROW2 = 1; KEYPAD_ROW3 = 1;
  52   1          if (KEYPAD_COL0 == 0) { key_code = KEY_S5;  }
  53   1          else if (KEYPAD_COL1 == 0) { key_code = KEY_S6;  }
C51 COMPILER V9.59.0.0   KEYPAD                                                            05/15/2025 08:47:22 PAGE 2   

  54   1          else if (KEYPAD_COL2 == 0) { key_code = KEY_S7;  }
  55   1          else if (KEYPAD_COL3 == 0) { key_code = KEY_S8;  }
  56   1          KEYPAD_ROW1 = 1; // Deactivate row 1
  57   1          if (key_code != KEY_NONE) return key_code;
  58   1      
  59   1          // Scan Row 2 (S9-S12), connected to KEYPAD_ROW2 (P1.6)
  60   1          KEYPAD_ROW0 = 1; KEYPAD_ROW1 = 1; KEYPAD_ROW2 = 0; KEYPAD_ROW3 = 1;
  61   1          if (KEYPAD_COL0 == 0) { key_code = KEY_S9;  }
  62   1          else if (KEYPAD_COL1 == 0) { key_code = KEY_S10; }
  63   1          else if (KEYPAD_COL2 == 0) { key_code = KEY_S11; }
  64   1          else if (KEYPAD_COL3 == 0) { key_code = KEY_S12; }
  65   1          KEYPAD_ROW2 = 1; // Deactivate row 2
  66   1          if (key_code != KEY_NONE) return key_code;
  67   1      
  68   1          // Scan Row 3 (S13-S16), connected to KEYPAD_ROW3 (P1.7) - Your target keys
  69   1          KEYPAD_ROW0 = 1; KEYPAD_ROW1 = 1; KEYPAD_ROW2 = 1; KEYPAD_ROW3 = 0;
  70   1          if (KEYPAD_COL0 == 0) { key_code = KEY_S13; }
  71   1          else if (KEYPAD_COL1 == 0) { key_code = KEY_S14; }
  72   1          else if (KEYPAD_COL2 == 0) { key_code = KEY_S15; }
  73   1          else if (KEYPAD_COL3 == 0) { key_code = KEY_S16; }
  74   1          KEYPAD_ROW3 = 1; // Deactivate row 3
  75   1          // No need to check key_code here again, just return it or KEY_NONE from previous checks
  76   1      
  77   1          return key_code; // Will be KEY_NONE if no key was found, or the code of the first detected key
  78   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
